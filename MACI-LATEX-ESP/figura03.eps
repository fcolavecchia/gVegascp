%!PS-Adobe-3.0 EPSF-3.0
%%Creator: dvips(k) 5.90a Copyright 2002 Radical Eye Software
%%Title: veamos.dvi
%%CreationDate: Tue Apr 08 10:39:20 2008
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 132 374 314 514
%%DocumentFonts: CMR10 CMMI10 CMSY10 CMR7
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips.exe veamos.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2008.04.08:1038
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMR7
%!PS-AdobeFont-1.1: CMR7 1.0
%%CreationDate: 1991 Aug 20 16:39:21
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
readonly def
/FontBBox{-27 -250 1122 750}readonly def
/UniqueID 5000790 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CABB9FFC6CC3F1E9AE32F234EB60FE7D
E34995B1ACFF52428EA20C8ED4FD73E3935CEBD40E0EAD70C0887A451E1B1AC8
47AEDE4191CCDB8B61345FD070FD30C4F375D8418DDD454729A251B3F61DAE7C
8882384282FDD6102AE8EEFEDE6447576AFA181F27A48216A9CAD730561469E4
78B286F22328F2AE84EF183DE4119C402771A249AAC1FA5435690A28D1B47486
1060C8000D3FE1BF45133CF847A24B4F8464A63CEA01EC84AA22FD005E74847E
01426B6890951A7DD1F50A5F3285E1F958F11FC7F00EE26FEE7C63998EA1328B
C9841C57C80946D2C2FC81346249A664ECFB08A2CE075036CEA7359FCA1E90C0
F686C3BB27EEFA45D548F7BD074CE60E626A4F83C69FE93A5324133A78362F30
8E8DCC80DD0C49E137CDC9AC08BAE39282E26A7A4D8C159B95F227BDA2A281AF
A9DAEBF31F504380B20812A211CF9FEB112EC29A3FB3BD3E81809FC6293487A7
455EB3B879D2B4BD46942BB1243896264722CB59146C3F65BD59B96A74B12BB2
9A1354AF174932210C6E19FE584B1B14C00E746089CBB17E68845D7B3EA05105
EEE461E3697FCF835CBE6D46C75523478E766832751CF6D96EC338BDAD57D53B
52F5340FAC9FE0456AD13101824234B262AC0CABA43B62EBDA39795BAE6CFE97
563A50AAE1F195888739F2676086A9811E5C9A4A7E0BF34F3E25568930ADF80F
0BDDAC3B634AD4BA6A59720EA4749236CF0F79ABA4716C340F98517F6F06D9AB
7ED8F46FC1868B5F3D3678DF71AA772CF1F7DD222C6BF19D8EF0CFB7A76FC6D1
0AD323C176134907AB375F20CFCD667AB094E2C7CB2179C4283329C9E435E7A4
1E042AD0BAA059B3F862236180B34D3FCED833472577BACD472A4DE3E3F6222F
7A252B780C86447859579C68F0425977770777CD319FC0FE4631263B46DCA7F8
58BC3ECDF81473E3B24B18837A06F5903A7CEE0E9440C9DB3C389351333D593C
EE15CC82BF893CDA2DEE9BBE3C130565082B13807E47906B9E038D8109C3719C
AC86885B472814DF79E36A069A75E40B030F0553BCB51E1EB02676CA10B2FDCA
911BAD068433CA9CF433C6F0E09ACE044FDA912E5F3F180C9DC7E27D9A3E45CC
76EA38ECB667E93E5B461062D471EF22FF1614920D9BFE848EFDD5A2A69A1F21
10927BCE4107C9EF5AC2FD422F3C79BCC3364BB5589785077E9C279AB0FF0D2F
3666DA9F8000AABB42925D2C4D91EC69C618CD333335C63DC2EAE080195C6A31
DB2774440A0573F9F4064B24223DC4565B344038B50D9F822D368EA7BEE7F138
C41CBD3272
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 114 /nabla put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
/UniqueID 5000820 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC5703711DA090312BA3FC00A08C453C609
C627A8B26A93D6564533E28C357CFE508F77CA3304E54D747B23655AE2736FC4
A8BC27DF89520B19C62CF6C8ED8E4AE06B27B4BF574FE68DE11F3BFA11411FD4
3F888415E2E6368BA8FC6331749FC37A90626F445C30EA327C9BE3045F6BAEA1
5E7539BC538A72F1228C5F5A039A215C5E41314A87987BE2FD1A3F8D53B6BEE6
A2E890714AADB830524DD129C759EA3DCB253C3D61C1556E8B25DC85BF9408FC
703BFD5D84DF0326825CB3EF2503C1E6741F7A31F402DB8F75AE6D273EADC218
DE1BA8356FE17161E993C4B39DE35ED79D75392B0A0AF3603C0EE97D12EAC054
1779521F8373223C92
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 59 /comma put
dup 67 /C put
dup 70 /F put
dup 80 /P put
dup 83 /S put
dup 102 /f put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
/UniqueID 5087385 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
95601766758C197F327101A9C9BF396ED625E27A7791ADF7474135C50F2F927A
5B5E332A003F858399565E4C02931D19AC2866CEFAB2288ACA215F2B7BE37156
89009B14D623E0A872AC17AA52D29EA6E8D725A05A300AAD937745F61803544E
978846734C4C8FEA576A5D77903920CF4531C051776BBDF99ABD8C09849E586C
ED01E1A543DE375693459A3ADD173D18A6CF5D7BE70FE01BFC9A507F47F398BF
D7F8579C8BED8645A13425FC5B5C5D272527C7E2860B6D94BB708BFA436C8C4D
8CB442891CE6282A7838ECA1D9279ADF7101D419FE0214AA874D8271A3FF21DC
87A46F61AFEAAEC60D83B86BB0F6FD5B3C9EDE47F0E71C16E8D1F93BA9D0DA9D
DB812F0CD59C3635EF765C0CA58AD2D85EC5DCFF57FF20EB892B94E36BDD7C59
1BD35AD732C1D97FBEE7411DD4D2EAB4B18F1F19CEF2A4239CABC21B4DAA3D0D
D94910A88760782C55E925622815110C6B1A0BDA31643D482675065396949DCF
70633AE86D6281344E658D3F356A6A21E066D40C0E474115EBE2EDD65796198A
E17FFE973AD221EB890532F67FF3B64CC4612DE483E8783C83298ACFE294527B
D8DAF5CBB9692F478EAAD19465DCE1C85D8110B60B8E5F09EB1DE2EE736ABE35
B269180B7281681C61B9DC3FD26F6A18066BC75FF64520CF2850DB0AC94EB997
7ECC80EAA4E2A51E653815130922F3A3D6A3C5918FEB662718F9429902F7D77D
848C5679EE6AEC1607792499C8606F09B248AAD37DE3BD21F309F774498082A7
4C927D7D2E3035045B788879109C215E507A934D02144876437A8F28479C220D
90A3A4337A3C26D18F66BE5DA3436E2F452B1A3FEDABFA6CEC61B1E2D67AC543
ECDA9FA497CAF79BEA446AE3E0D4152A5F6F1C208CA2493BD18E86B94602F248
42AD1511464D8E6973F24E3A0A5B5EA64EDCD46F17B6B5051A83528838DCA416
9E5BFC7197D7D96C83E2AB5E2E395F2AF6B853BF3F180F61FA143BB0E575EF21
387922126DB90586D326DD5FE44A34352C184187A3DB2C6833907559FFD46371
DBD4009ED5429359276EAB0A843E6BEB3E473D3EABF231367A3BA1091F3BAD94
60D366D749471F2E855AEDC11CFC89DA908A2848312693776B2BFA755FB1FA35
4B182D4BFF33316E4FE9F9DADAF6F5962B52966FE403DCD7AA29637BCB436FB9
AC4526918E8F3992C40B3953BE3A239E152874AC2D5D64C9C5113B8C4DD6E582
8339C3550ACC042B678BF0F090CB5DCB2ADA29A1CF7EE49A54C2D15A0A41C78B
D1679F5647F3D13CE369D974D51DA0A6E25807148EF1D8B5408C3F20E62DF207
245BE5995134E28D39B357A19E5340639D1190251E750919F3C495AACC525C7D
22009B3826715AEB94D2D97CB2CB768EEE256A654F38F1894587F5921A8D935C
D30387F523C757D4BB5FFC91DB09966383AAFC3ADE0FEA5E10FE938DE0B62E9A
CCDF671F224FA9D91273DBB82B04335380FFF83E8842D0E9608347310C684D4B
DF7AADA017C65B2446DBE6BAEDA96621C3A7653A0DFF6568EA6932F4BE42D34A
C27628EB812E66786F98E5ABC1188379B2F4954A95F97A257AB5BEFE61484584
C713B4812DF568ED99FE564A1683D3F217357562FC173C7E4FDBB2230BA6C8E1
C105AAEB59548F595DC371DF093D356A2B1B864BF03F2C0BF0F98C9B1D617BCE
7FB118B013D523AA7C55F2BB0DA53A5A704F7D785734BA4F66D72131D7552C5F
0E6D3576F64C2758EECD47B72073F05F6AD60931D1DC59DD8C88753D34CF3384
102F4D443171750A6A62BBF970D660C2540EAAE7C350D46768C656D539DAC874
28DE0079743B3383706B668B306D18C34C1C9349F835C384C723A71C8B79081C
CD01E09712120B05C5D02BE11B11F82A714EAD0E820786B7DA54DE56ADCC4E89
9958FEBA611127011FF1575180CF5C31C2EFBB82FD44E81BA0D8B5FCA2907EBC
AD5652DECB9811B1D68BCCE8936A81DF70BFE2B36DA99373E0CED808F58DD192
A1BF6E79B75ED5755D2B3E6272E518578205F4BA50E07B2A6E75F3EC48719EE0
67D7621FB2BDA08A933B05330215C7E97E45812508150E090A39BE14D5384FC7
45F2C1FD684CC2AA5DB44D29C0DDBEE71BC8FFB5A033CBE07558749A25C5F943
CDC657FB4F58AB087173462C357D246D370136485823C08810577CAB35F35EC1
2D29BC99F878CE106C8C0DDC31F3DD6062AD0B2405DDA9B5C48623C0F3BD77F2
5BE494EE1275F470073E8F4B9B265A9E4E2E753E0485B54BC8BB2CAB7F993BF5
CB8B97AA58693CAA193A668D8733140952D2B50A14B0A8E6208A7C3115C61A03
292ED06C668BA549ADAAA6547DDE6F284819884B541EC7D1461067984499D089
13AA2581282C86BA4BFC57DBD4DD24C9F61D1E1C46ACF32F737922A61376045C
77EBCC45F12D6E77ED395860F2689497BA646EDD48974C257819E09D12FC69D4
9126F4083EFD000C054FEE00B9C067C029376BD6C478D7D15B41FA341A714521
83A54E69A925C67A0B8B8E39B3C7F60D53EA50BB5CF5B86F751445796DEBFC75
9507DF46B093B4CF6B6644CB39EF664726376B491702874D1986C95F60B6A835
3F5AB276025635D1F7DEF3EBF5CAE49F54B7A705EAADAB1035727F72921E1E20
BECDF58186D9B4A2724563D7DE02F99D502BB9762638C94CEE3721D1F3620A58
3B75A6D415CFDB009037F4EE352B5AC2E1622575BA40F9B75EB1DA7D781AAD97
997D8DA24A0857202EFC5829429F70E5575B51D1356DF7FBAF7D9D0B4EEBCD99
EFD4DA5A029527C41A356C6886A1D5676049CD8E9DD4A95A87162CF83AB38D74
E9026CEAE3A8B40E5B37F017C45C4510D66007C1D72CEC2D8EA6C339E388746F
9DA85675D3F766B8720C91541158DC11EE62C011C188FB246E289E993FD58B41

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 58 /colon put
dup 61 /equal put
dup 80 /P put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
/UniqueID 5000793 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEE09555C11E6E295
71B219B380EE9E5BB17AD84B4E8AED35880BD88E5AC7D9FE25C46889CD093396
F0E34A62F93E64C8E7975CFD617121244AB09FF9A4F73F8166197D0CDE2EEBB3
81AB9BD8329579C2122368F56DEB89BA6E42C5D9E20F2789CC4A89E4AD9B877F
8A0ACB84936F109D86211169257C19756A97E682601F4D1E7ED950A351C14DAC
4BEA7FB0E58FB5AEB55BC09B1253748B61B4E00C448F263458BF958D3986BF18
9636037E95FB425AAC96FCED5B4C766F93041FAA0DBB196B0A220B8E3A9FCA6E
B4F5C0C775C25AFF4F5099CD3A2FA59ACA735718F8E90B351B015320794A89E8
4C34F32B465E201008CCC0A15C2DEE572BDA14D8BDDFCF2743A15F8A93386861
828F6251F206B9131C951D1ED4364A9CCE507E2959A1DA04A777B592888D38ED
E68FFB3EFE83870BA8E04B88C9EEEB2DB80D4D07B52CE914D9DADF825A5301AC
C64063909D6C1DC84C274C90004F41A1FAFD450805C5DD2A8E4F4C23E114246F
C103EB63B58F33E44DD04F6367E04C3CBB3400BA3C1943B874CFB7DBF6A3EB5A
3F665C5A98F578A03948821E40D1608FB70C5915CA0DE369A0D7112BFF6CAE56
CB9BF699DAF3859F2B46DF97AE05915E791F1CE849154C53C4403EFD6F1A44EF
78C167190F3326BA35B2A0F95CD03492DBA2903489ABB6B2EB9F977F3F4D690B
31E8F6E32F83D91F721ABD116A40698F26610853E7FD075478979BEF42166C1B
312E8C20CB3F080B08A69416DA402D336C627BABC4737FC72F8F4F6BB7D73551
EE33D3CEA9052546399CE5FF4996968D1EF09B7C19995C083E727D2398021CAE
6B824B074160730AE1D61010FB6167E8AC42145BCE800A58D221004F6B953F48
B4A99CBF85F829F34F76B02D02D956F2D9710B38FE827FE961A3BA3E78F64ECD
DADF68975D97F94EA8A698A5C6C48A4186630DA766AE8A57D650A226E068F161
436B0F6334FE45E57BA7F3CC6E63E2866E3BDBA559FF30704DF235ABA5080004
CA0FA6C522B546D0B3F60BA1D7D956CB17517DF95D8D5E51D994BACE39AC902E
2000C577FA15398CF620966AE73D22C7312708911CCBA89FB4078064701CEF7A
66A23555E9BF2A40BDDB9BAD16E0B91E4D9ADED721784AB48D99878E0FEA0826
8E3B221641B77CEC9AF312CFC857F4D45E91067AB304DE3EE54B08231102E217
DCC50595595DE41A41B4877E383EF37B07017F3DFFE0AA74DC6137EB726C9481
03B47BBE9E556034AFBD9629D7F6B88EA20514F3453A08F1898F30FB9588376C
14E7A13680158B11195C156DCF13C6734C10457CBAFD4FA76F37C278B616531C
0CB5BD657D0582137BD76A2F6C33822483F6BF57D78C038FEE996903566C3E3B
A94123B89708DDD88E8C042D2A1A71EED1B08E7A7FE2032A3597CB57026CAA74
F4438FAC50F44393F37565A9AC7EE4ED64AED724990515792F2F4D287BF38C8A
E933B0DB8209D2A358AD68B3A4EBF5FBECCCB7B060F09A3F1B2985C13E1C8E06
0D838FCBD0EF08E127AB999047893263DA0E8B741526A5DDFA34DF3FFEC1E223
7D57E5839F8E456153C0C5F1E8B8BBD7D3AB806FB28A17666AEDD9295CDE57C1
C4B58799F98026EFE744097FF775AC589BE3F8F295CAC5736BF35DE08F67BF17
1E28199245FD068AA0835FCE20892EDC73EF516A40B796B6C2DA116D53BD481F
C9E7D10E90714D62D24C6F1078A7CA8ADF745D4E669CCFE93685B6DD537B9A4C
F92CECA63ABD7C301514550E28332DA0B0F850AB78B77957393834280FCD4C58
E0B3AE165DF33DC7C3DBA21C06D1E5AF872C2C9FF6B7F318F9D78D098C07E70E
AF49B405426A026DF639FA06135C278674CE380E8F9C454D4FC9235C7A1CCD74
C8E037B6378718F9B8C3DD6B1FDFB2AF07244C2A9816DA7D2EBE650D9B5B4946
C511B9F63AF4CEA3F479209DC7D19C6CAED257D6EEB1DE4A4F21A9002F04C5A6
5A73CDA3524C0C2A3487D677303DFA85D8667102A4F7279B35BC134DF91C928C
ADFEBFB8BB1A206D35C068B8B36851A9034F887B67D9621B2AC6CF933A87EB3A
7910AE3AB379380F1AA4BFA8F89CBA18669FDB1BC4AF4D85FD19F440832159D9
063DF8DAEF8ADA60273C21E6F327A77B4938BA23966547A5FD2CD54DC0820628
74784C1514B66A78720CBB83B6D7E42DC43F934F631F11DA017311EE372E3503
45C10207624447FEE10B166B43B8640E8E931C2FA38CCD9204BBA95960C15F6A
48F055DF2FA16ECD336722A8A7F6862F7E1F86FA9A836E2CC6CBECF9EFA15AE4
F59254F63955C0433EC2D142B0716F5378A628C96E1575E4DE76378B590E84F0
09F09AFBF71B5013AED08D8FA7FC3AF98A6A185B57C22C42F267C792E6DE0BE1
7F3023E2B229866AC13CBFA6BD4051477E1FEE2B1B9932B7D4305A6A3C3130D9
D7BF8D77A17F4E2C1239258325CA96BEFEA2F2EB0C37661E873939EDD215BB42
9F97068FD331CD6180AFA714B95900092EA4B21A676BB67A0E790F86C34EDCA2
05039003321DEB9F8E8DF30B3C92643E9B1CAB6485F3A6E846842DFDA5055EAF
CFF6D3F962D49E53BCF6E334C3FE6593856135ED4EAE42EC565A3AF6A28AB591
584943A6EC5D2C8CBACA7A3FE89C5355F2BE6772DBAE2BCB120379919C999197
9262E54CA0C127C17E8FDA06BCF650DADF6FBC2D7186AD7C6F2239722E817821
7F941CC8E74D1B5E743F69B9B356C1B9AB81609908F88C534BD44E5BF3C9AD8E
286F4BB66F10D1B32BC7321F3CA0DE78FEB81A58B4A4F952B168AEFC9BFE51D5
939C09A5851777E41DA5F0BE4029FAC8C520A34B9196260D8591459DE9074CC1
C056BC2ADBB8DA869989A3B5F0A410F195C32F58C90CD025A676C2A97559A3D0
ECC6730EE3CD29BC81E427E9A5003906956AAB8AADCCBFD0C0EA32343893B0A2
FD843C65981754373B24413D90FD48F414DE17796086689793B8A7320AED5A5A
D9155E366CA80ECAE143395714E67EADC99ABEF04C387238EA73C98DA43625E2
1F0FF928BA29FDEB7D53AA1E12CF278601F52C2B4336354D1D97026F22BFC2B7
D259C7F868EAB87359792796DB22EB768EF6D60C6E73C5AC0404F71C061606AC
7610E61F2E2D0CFF3E9F3983B33EC9586B7C5F3CFB1CBE7608FA04FE692B68CD
45E37A585DB00542B48D70CF27606BC27B200B41DC0C18EC6A56793F05F592C0
92C8D6E4B19B90EBF8715C26CC9E90634F07060C7CC4575B15D7F8BC9F83F6E3
5B09885FD99E06A79D15F9370FE83282801738BA5669E4D980336AD1988B0832
84FDB8E99BF0A2A33AB611FCE311545418119D3BEF1FF91385FD754160E8DFB3
8A2ABBB8468AB537D3EC87FDEFD697F93DCC328441FCA0ACF19F9298099A7099
DB4E87700E78822929B35CC22A587D97D867AF7BE11D7992B1698344C11CC6E3
32F662E54AD76DD7B461131F6AF218800AEB0A73AB55404EF542777BE35B2594
A62434329F6EB9E5BAA3B0E2D0C1260465A639FB671F47998EC96F0BE069B462
37103AD78EC1FDE19C955390C81E324A65EEE376E58F9D51DE3A1919F210B128
298947DCD9F102782A92A24B9D096F6AA8D682B78D84B6D8237DD44804FCB269
37285FBCD846B3991963B8CFBD64BCAFD7D7F893D72AD6E00283C3A7BE29EB77
6F999197732ED3DC4382505D55719A956ED63F4F4E2C65470DE45388F2D69FE4
B4142C4A33D3B3CF4577399D305A96DC468BBC02F7D69DA1616AE8D2BA4792F6
8D2387EF1C2F170A6404FF373E40F8013E8877AD4896FA7F274CC2B5F5098CC2
76EAC3E88AEDE8AB7630803CADC7581608EBF22145AFD1D4D699D444E83B764A
BF1D1617A5BF1B4092E37BCB09D6DA2D9193A653C0CD9116B42D7D40906645C1
26E2CECCDCC814930EEAAD47893502BD8908C60830B5E1945343216CE47373CB
3A0A94F0CAC235BF2267BE29BFE5F830F56AA123DEFED4E79E8E55999256A2F5
7C9B1E27CB25F34FF27430099532AC9F38275C6491794ABDB8682DC22E9F5A10
C13EDC4F9E97483AA36C6C0A4B73697AE6257C91FFE5FAE736712CF4367BCE3C
F8ABDA04477C87EF1982D85BC4FACE59C0C9FEA2A14C79861684A2A6659D4963
2881CF2F511229F91E6A0548D1A07ACD5EB2BBA5D06E2EBCC6A8BB26241C6997
C6F675FBFC4B9BE4520FDDC6DB2C8688ADD5EABC52196979FD28CBF7D75A5C8F
15D64E9D79703E710737DB8CAA51074571778C37E35D91631E2C6A3BFA302915
B882FA3AF90E587A391CF120626ED252C77E34FD372BDF5DC9E6C500D3598A44
990997047B1E7CBDDD7A3280559E0966B0683A23992A2EA7F097EC2C2FF1E823
7A23EA404B74EA43B4200B90E7EE412617EA85D14BA44FBF5BAF099CCAA45D0E
BE8B74A46F3366E136985C9B2C5B764E05EAF22C1027650C76A52410F4E89250
CF5C696F7B9951FB80B609724D8779268CB3680A574952DAB92E0DBEB9F2E754
539741818D05B6ECC938E42E6672FAED7674970FA538507CE0CFD61C796D739D
92C264C95338F0FA3EC58465DD86F63F011F913654BDE6F22501755BEA0EBDFF
E54A8544695CEDA5FFCAD882196A646623F7F65BC747275C127D3DEDE0631C2D
9628C635C81D7654F44C14225BD42D351A635A1E7E65487E3D04E115BDAA825B
28E598E445AFCAC5B52A1A4881E3801247235F293A03779A2FAC526C9353562D
3E2887B6F73FF4945E1BF04DA7F1D119E185B56C8218CC9FC204AF7A41ABA09A
383359A841981DD8278BFDBCA96C45B0E5FB5BF8DD33C6B822D79AE6FC5B8146
2D9D16BABDCB7346F1C2184813EB1F7D9FEAA9645F508242F79CDE3A8D261D4B
58DFF79E85A8AC12AEF1C4740B8543F2B4B409A7973E6754F639A4E9614530D9
01A2C07C35C1C1C7AA15FC111797669F64F6E7ECA67D530E429C7DDED04558B8
3DECA6501FFA6AD8667EBC42B8926AAC9EA7EAADD2FF6E007B3BE1FF83EA0230
02AB468E662CCB3298EF97E365F6AB727108A1D274D18A8CC852A47C1C998D33
956CC280882138B85125D31E6890A95FAC16ABAA3172895317C98A0C81C26166
989027D741C0CE9261B9595D20834954C3CBDA6801F5A26524632C50D8F99FBC
06CED2B0E3E7B458E58CD1CFF04CA70D4464A2F067E57CF43ACB524222439CEB
0D7616F78D3701E64DEEFB39BAC44094CB5A7DC1B5880DBD1AD3240C02F97EE4
2CC7D6CDBD31FEE0A8E63A52EC1751053D3E7B8E9903D3817EF875807B8A0A43
FD44FD8CAEF043B7B1916FB9A42A38EC74091D542BDBF4D387D74D29A37E32DB
27684076A0A4BBE98555500FFF9AEF76EF476FE26916390A9E8DC820237B8BFE
EAF2AA1F2623E04B17528A71E5D88CC6925519E63A03B9B0418E717D484186C2
B3C60F08C6A0E45CCD2D41899F8A84C8D89C952A044C9F586918515A457FAB5B
0AFF0F16D5FB34CC60B47E92DC89DBE2613B1A0C93F510AF29A43D305EE5DDBB
E771407294459ABF8205A37E2C55FF64EAAF46D550FD69EA4F598E60AE74B686
066412D86005BBCE8421AEC7892C790A641196A4001B15FCEF377C9AB0A3E897
6C4C04540BA6191295BF48959A42D1AE243CDC6D8A16FD3C4A8AA4350AA6DFC5
1FCF6035ACF78D0094DA3CAE16284DB110
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600 (veamos.dvi)
@start /Fa 207[33 48[{}1 58.1154 /CMR7 rf /Fb 141[69
114[{}1 83.022 /CMSY10 rf /Fc 133[39 41 47 17[41 18[51
2[53 9[53 2[59 7[23 59[{}9 83.022 /CMMI10 rf /Fd 139[32
33 33 1[46 1[46 69 23 4[42 25 37 1[37 1[42 13[46 2[57
18[65 2[23 16[32 32 40[{}18 83.022 /CMR10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black Black 515 3315 a
 /PSfrag where{pop(P)[[0()0.9 0]](C: y=f(x))[[1()0.9 0]](S: z=F(x,y))[[2()0.9
0]](f(P))[[3()0.8 0]](y)[[4()0.8 0]](z)[[5()0.8 0]](x)[[6()0.8 0]](x0)[[7()0.8
0]](y0)[[8()0.8 0]]9 0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 515
3315 a @beginspecial 0 @llx 0 @lly 397 @urx 328 @ury
1718 @rwi @setspecial
%%BeginDocument: u6d2.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: C:\Pepa\facultad\calculo2\2008\teoria\u6d2.dia
%%Creator: Dia v0.94
%%CreationDate: Tue Apr 08 10:36:33 2008
%%For: Guillermo
%%Orientation: Portrait
%%Magnification: 1.0000
%%BoundingBox: 0 0 397 328
%%BeginSetup
%%EndSetup
%%EndComments
%%BeginProlog
[ /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E
/F /G /H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W /X /Y
/Z /bracketleft /backslash /bracketright /asciicircum /underscore /quoteleft /a /b /c
/d /e /f /g /h /i /j /k /l /m
/n /o /p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section /dieresis /copyright
/ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron /degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf
/threequarters /questiondown /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde
/Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave /Uacute /Ucircumflex
/Udieresis /Yacute /Thorn /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
/ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave
/uacute /ucircumflex /udieresis /yacute /thorn /ydieresis] /isolatin1encoding exch def
/cp {closepath} bind def
/c {curveto} bind def
/f {fill} bind def
/a {arc} bind def
/ef {eofill} bind def
/ex {exch} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth pop} bind def
/tr {translate} bind def

/ellipsedict 8 dict def
ellipsedict /mtrx matrix put
/ellipse
{ ellipsedict begin
   /endangle exch def
   /startangle exch def
   /yrad exch def
   /xrad exch def
   /y exch def
   /x exch def   /savematrix mtrx currentmatrix def
   x y tr xrad yrad sc
   0 0 1 startangle endangle arc
   savematrix setmatrix
   end
} def

/mergeprocs {
dup length
3 -1 roll
dup
length
dup
5 1 roll
3 -1 roll
add
array cvx
dup
3 -1 roll
0 exch
putinterval
dup
4 2 roll
putinterval
} bind def
/Times-Roman-latin1
    /Times-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-Italic-latin1
    /Times-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-Bold-latin1
    /Times-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-BoldItalic-latin1
    /Times-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-Book-latin1
    /AvantGarde-Book findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-BookOblique-latin1
    /AvantGarde-BookOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-Demi-latin1
    /AvantGarde-Demi findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-DemiOblique-latin1
    /AvantGarde-DemiOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-Light-latin1
    /Bookman-Light findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-LightItalic-latin1
    /Bookman-LightItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-Demi-latin1
    /Bookman-Demi findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-DemiItalic-latin1
    /Bookman-DemiItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-latin1
    /Courier findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-Oblique-latin1
    /Courier-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-Bold-latin1
    /Courier-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-BoldOblique-latin1
    /Courier-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-latin1
    /Helvetica findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Oblique-latin1
    /Helvetica-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Bold-latin1
    /Helvetica-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-BoldOblique-latin1
    /Helvetica-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-latin1
    /Helvetica-Narrow findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-Oblique-latin1
    /Helvetica-Narrow-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-Bold-latin1
    /Helvetica-Narrow-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-BoldOblique-latin1
    /Helvetica-Narrow-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Roman-latin1
    /NewCenturySchoolbook-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Italic-latin1
    /NewCenturySchoolbook-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Bold-latin1
    /NewCenturySchoolbook-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-BoldItalic-latin1
    /NewCenturySchoolbook-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Roman-latin1
    /Palatino-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Italic-latin1
    /Palatino-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Bold-latin1
    /Palatino-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-BoldItalic-latin1
    /Palatino-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Symbol-latin1
    /Symbol findfont
definefont pop
/ZapfChancery-MediumItalic-latin1
    /ZapfChancery-MediumItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/ZapfDingbats-latin1
    /ZapfDingbats findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
28.346000 -28.346000 scale
-10.480410 -16.153182 translate
%%EndProlog


0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 18.415200 8.550010 m 18.415200 8.550010 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 18.415200 8.550010 m 18.415200 8.550010 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slj
0 slc
0.678431 0.847059 0.901961 srgb
n 16.180410 6.920383 m 15.280410 4.620383 24.930410 14.570383 20.580410 14.570383 c 16.230410 14.570383 17.080410 9.220383 16.180410 6.920383 c ef
0.380392 0.380392 0.905882 srgb
n 16.180410 6.920383 m 15.280410 4.620383 24.930410 14.570383 20.580410 14.570383 c 16.230410 14.570383 17.080410 9.220383 16.180410 6.920383 c s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
1.000000 0.000000 0.000000 srgb
n 18.648960 10.769788 3.072777 3.072777 29.232281 96.888662 ellipse s
/Helvetica-latin1 ff 0.560000 scf sf
(C: y=f\(x\)) 21.730410 13.370383 m gs 1 -1 sc sh gr
/Helvetica-latin1 ff 0.560000 scf sf
0.000000 0.000000 1.000000 srgb
(S: z=F\(x,y\)) 19.180410 8.070383 m gs 1 -1 sc sh gr
/Helvetica-latin1 ff 0.560000 scf sf
0.000000 0.000000 0.000000 srgb
(P) 19.580410 13.070383 m gs 1 -1 sc sh gr
1.000000 1.000000 1.000000 srgb
n 20.230410 13.370383 0.140205 0.170373 0 360 ellipse f
0.100000 slw
[] 0 sd
[] 0 sd
0.000000 0.000000 0.000000 srgb
n 20.230410 13.370383 0.140205 0.170373 0 360 ellipse cp s
0.080000 slw
[] 0 sd
[] 0 sd
0 slc
n 20.180410 13.420383 m 21.491658 15.715067 l s
0.080000 slw
[] 0 sd
0 slj
0 slc
n 21.070904 15.482638 m 21.536034 15.792725 l 21.505025 15.234568 l s
/Helvetica-latin1 ff 0.560000 scf sf
(f\(P\)) 21.980410 15.520383 m gs 1 -1 sc sh gr
0.070000 slw
[] 0 sd
[] 0 sd
0 slc
n 13.930410 12.070383 m 13.930410 4.826907 l s
0.070000 slw
[] 0 sd
0 slj
0 slc
n 14.180410 5.248645 m 13.930410 4.748645 l 13.680410 5.248645 l s
0.070000 slw
[] 0 sd
[] 0 sd
0 slc
n 13.980410 12.020383 m 23.723885 12.020383 l s
0.070000 slw
[] 0 sd
0 slj
0 slc
n 23.302148 12.270383 m 23.802148 12.020383 l 23.302148 11.770383 l s
0.070000 slw
[] 0 sd
[] 0 sd
0 slc
n 13.930410 12.020383 m 11.077187 15.647361 l s
0.070000 slw
[] 0 sd
0 slj
0 slc
n 11.141452 15.161324 m 11.028798 15.708872 l 11.534429 15.470466 l s
0.080000 slw
[0.020000] 0 sd
[0.020000] 0 sd
0 slc
n 20.230410 13.370383 m 12.730410 13.370383 l s
/Helvetica-latin1 ff 0.560000 scf sf
(x0) 11.930410 13.320383 m gs 1 -1 sc sh gr
0.070000 slw
[0.020000] 0 sd
[0.020000] 0 sd
0 slc
n 21.130410 11.970383 m 20.230410 13.370383 l s
/Helvetica-latin1 ff 0.560000 scf sf
(y0) 21.380410 11.720383 m gs 1 -1 sc sh gr
/Helvetica-latin1 ff 0.560000 scf sf
(x) 10.480410 15.070383 m gs 1 -1 sc sh gr
/Helvetica-latin1 ff 0.560000 scf sf
(y) 23.930410 12.420383 m gs 1 -1 sc sh gr
/Helvetica-latin1 ff 0.560000 scf sf
(z) 13.130410 5.320383 m gs 1 -1 sc sh gr
showpage

%%EndDocument
 @endspecial 515 3315 a
 /End PSfrag
 515 3315 a 515 2328 a
 /Hide PSfrag
 515 2328
a -225 2385 a Fd(PSfrag)26 b(replacemen)n(ts)p -225 2415
741 4 v 515 2418 a
 /Unhide PSfrag
 515 2418 a 450 2489 a
  {
 450 2489 a Black
29 x Fc(P)p Black 450 2489 a
  } 0/Place PSfrag
 450 2489 a 241 2576 a
  {
 241
2576 a Black 50 2597 a Fc(C)k Fd(:)37 b Fc(y)25 b Fd(=)e
Fc(f)9 b Fd(\()p Fc(x)p Fd(\))p Black 241 2576 a
  } 1/Place PSfrag
 241
2576 a 219 2675 a
  {
 219 2675 a Black -34 2696 a Fc(S)27
b Fd(:)37 b Fc(z)27 b Fd(=)22 b Fc(F)12 b Fd(\()p Fc(x;)i(y)s
Fd(\))p Black 219 2675 a
  } 2/Place PSfrag
 219 2675 a 267 2775 a
  {
 267 2775
a Black 21 x Fb(r)p Fc(f)9 b Fd(\()p Fc(P)j Fd(\))p Black
267 2775 a
  } 3/Place PSfrag
 267 2775 a 493 2916 a
  {
 493 2916 a Black 471
2900 a Fc(y)p Black 493 2916 a
  } 4/Place PSfrag
 493 2916 a 494 2998 a
  {

494 2998 a Black 473 3016 a Fc(z)p Black 494 2998 a
  } 5/Place PSfrag
 494
2998 a 491 3098 a
  {
 491 3098 a Black 467 3115 a Fc(x)p
Black 491 3098 a
  } 6/Place PSfrag
 491 3098 a 473 3167 a
  {
 473 3167 a Black
431 3203 a Fc(x)478 3215 y Fa(0)p Black 473 3167 a
  } 7/Place PSfrag
 473
3167 a 476 3263 a
  {
 476 3263 a Black 437 3299 a Fc(y)478
3311 y Fa(0)p Black 476 3263 a
  } 8/Place PSfrag
 476 3263 a Black Black
Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
